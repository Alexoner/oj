#!/usr/bin/env python
# -*- coding: utf-8 -*-

envGlobal = Environment(
    CPPPATH=['../../language/cpp'],
    CXXFLAGS="-std=c++11 -O0 -ggdb -Wall"
)

print(envGlobal['CPPPATH'])

envGlobal.SharedLibrary('_type', ['_type.cpp',  '_tree.cpp', '_trieTree.cpp'])

env = envGlobal.Clone()
env.Append(LIBS=["_type"], LIBPATH=['.'])

Program = env.Program

# TODO: build in another directory?
VariantDir("build", ".", duplicate=0)

Program('wildcardMatching', 'wildcardMatching.cpp')
#Program('wordBreakII', 'wordBreakII.cpp')
Program('minimumWindowString', 'minimumWindowString.cpp')
Program('totalHammingDistance', 'totalHammingDistance.cpp')
Program('sumOfTwoIntegers', 'sumOfTwoIntegers.cpp')
Program('divide', 'divide.cpp')
Program('longestPalindromicSubstring', 'longestPalindromicSubstring.cpp')
Program('sortslist', 'sortslist.cpp')
Program('searchRotatedSortedArray', 'searchRotatedSortedArray.cpp')
Program('insertionSortList', 'insertionSortList.cpp')
Program('magicalString', 'magicalString.cpp')
Program('serializeAndDeserializeBinaryTree', 'serializeAndDeserializeBinaryTree.cpp')
Program('onesAndZeroes', 'onesAndZeroes.cpp')
Program('matchsticksToSquare', 'matchsticksToSquare.cpp')
Program('minimumHeightTrees', 'minimumHeightTrees.cpp')
Program('verifyPreorderSerializationOfABinaryTree', 'verifyPreorderSerializationOfABinaryTree.cpp')
Program('tagValidator', 'tagValidator.cpp')
Program('deleteNodeInABst', 'deleteNodeInABst.cpp')
Program('stringCompression', 'stringCompression.cpp')
Program('findMedianFromDataStream', 'findMedianFromDataStream.cpp')
Program('slidingWindowMedian', 'slidingWindowMedian.cpp')
Program('largestPalindromeProduct', 'largestPalindromeProduct.cpp')
Program('copyListWithRandomPointer', 'copyListWithRandomPointer.cpp')
Program('replaceWords', 'replaceWords.cpp')
Program('implementMagicDictionary', 'implementMagicDictionary.cpp')
Program('taskScheduler', 'taskScheduler.cpp')
Program('continuousSubarraySum', 'continuousSubarraySum.cpp')
Program('longestPalindromicSubsequence', 'longestPalindromicSubsequence.cpp')
Program('palindromicSubstrings', 'palindromicSubstrings.cpp')
Program('reverseWordsInAString', 'reverseWordsInAString.cpp')
