#!/usr/bin/env python
# -*- coding: utf-8 -*-
'''
389. Find the Difference

Total Accepted: 44888
Total Submissions: 88723
Difficulty: Easy
Contributors: Admin

Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a
random position.

Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.

==============================================================================================
SOLUTION

There is shuffling, so the order is not maintained and doesn't matter.

1. Hash table to store the occurrence count of letters in each string, find the difference.
O(m + n)

2. Math

Denote the sum of ascii value of all letters of a string by f(s), then the difference
f(t) - f(s) is the ascii value of added letter.


'''

class Solution(object):

    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        # ch = self.findTheDifferenceSum(s, t)
        ch = self.findTheDifferenceXOR(s, t)
        print(ch)
        return ch

    def findTheDifferenceSum(self, s, t):
        return chr(sum(map(lambda x: ord(x), t)) - sum(map(lambda x: ord(x), s)))

    def findTheDifferenceXOR(self, s, t):
        r = 0
        for c in s: r ^= ord(c)
        for c in t: r ^= ord(c)
        return chr(r)


def test():
    solution = Solution()

    assert solution.findTheDifference("", "a") == "a"
    assert solution.findTheDifference("abcd", "abcde") == "e"

    print("self test passed")

if __name__ == '__main__':
    test()
